//
//  main.swift
//  LeetCodeChallenge
//
//  Created by Xiao Liang on 3/18/19.
//  Copyright Â© 2019 TrackVia, Inc. All rights reserved.
//

import Foundation

protocol Runnable {
    func runTests()
}

func run(_ runnable: Runnable) {
    runnable.runTests()
}

//run(TwoSums())
//run(TwoSumsBST())
//run(TwoSumsOOP())
//run(JewelsAndStones())
//run(AnagramMappings())
//run(ToLowerString())
//run(UniqueEmails())
//run(MorseCode())
//run(NRepeated())
//run(SortedSquares())
//run(SortedArrayByParity())
//run(ImageFlip())
//run(ReturnToOrigin())
//run(DIStringMatch())
//run(HammingDistance())
//run(DeletedColumnSorted())
//run(MergeBinaryTrees())
//run(SubdomainVisitCount())
//run(ReverseString())
//run(FizzBuzz())
//run(MoveZeroes())
//run(ReverseLinkedList())
//run(RomanToInt())
//run(BuyStock())
//run(MergeSortedLinkedLists())
//run(MaxSubArray())
//run(PalinedromeNumber())
//run(MaxStackOO())
//run(ParenthesisCheck())
//run(ReverseInteger())
//run(MergeTwoSortedArrays())
//run(AddBinary())
//run(AddTwoNumbers())
//run(NumberOfIslands())
//run(LongestPalindrome())
//run(NumberOfCombinations())
//run(LongestNonRepeatSubstring())
//run(ThreeSum())
//run(MergeIntervals())
//run(MinimumMeetingRooms())
//run(ProductOfArrayExceptSelf())
//run(MaxArea())
//run(RotatedSortedArray())
//run(GenerateParenthesis())
//run(MinStack())
//run(SubarraySumK())
//run(CoinChange())
//run(SortLog())
//run(StringPermutations())
//run(NextPermutation())
//run(GroupAnagrams())
//run(WordSearch())
//run(SpiralMatrix())
//run(LetterCombinations())
//run(TaskScheduler())
//run(TopK())
//run(LRUCache())
//run(DecodeString())
//run(TinyURL())
//run(DailyTemperatures())
//run(MultiplyVectors())
//run(BSTIterator())
//run(KClosestPoint())
//run(GetRandomizedSet())
//run(GetRandomizedSetWithDuplicates())
//run(ReconstructItinerary())
//run(WordLadder())
//run(FindDuplicateFiles())
//run(WordBreak())
//run(ProductSubArray())
//run(MinClimbingStairs())
//run(RangeSum())
//run(BSTInOrder())
//run(HouseRobber())
//run(HouseRobberCircle())
//run(ArrayPairSum())
//run(MedianSortedArray())
//run(SerializeAndDeserializeBinaryTree())
//run(KnapSack())
//run(FirstMissingPositiveInteger())
//run(DIStringMatch())
//run(MergeKSortedArrays())
//run(LongestSubstringK())
//run(FindJudges())
//run(DecodeMessage())
//run(ClassSchedule())
//run(ThreeSumClosestTarget())
//run(ThreeSumLessTarget())
//run(FourSumTarget())
//run(UniquePaths())
//run(SymmetricTree())
//run(InterleavingStrings())
//run(IslandPerimeter())
//run(NumSquares())
//run(AddStrings())
//run(MultiplyStrings())
//run(MissingNumber())
//run(CountAndSay())
//run(PalindromeLinkedList())
//run(PartitionLabels())
//run(RotateArray())
//run(BTLevelOrderTraversal())
//run(SerializeDeserializeBST())
//run(GrayCode())
//run(QuickSort())
//run(CombinationSum())
//run(TreeTraversalWithQueue())
//run(BinarySearch())
//run(DisappearingNumbers())
//run(QueueReconstruction())
//run(MinPathSum())
//run(SplitArray())
//run(GraphValidTree())
//run(AlgoThreeSumTarget())
//run(AlgoSmallestDifference())
//run(AlgoSubarraySort())
//run(AlgoLargestRange())
//run(TopologicalSort())
//run(AlgoMinRewards())
//run(AlgoValidateBinaryTree())
//run(AlgoInvertBST())
//run(AlgoMaxSubsetWithNoAdjacentElements())
//run(AlgoNumberOfWaysForChange())
//run(ReverseLinkedList())
//run(strStr())
//run(Sqrt())
//run(LongestPalindromeSubstring())
//run(AlgoMergeSort())
//run(HighFive())
//run(PermutationInString())
//run(MinimumWindowSubstring())
//run(MinimumPathTriange())
//run(AlgoKnapSack())
//run(KnapSack())
//run(UniqueBinaryTrees())
//run(AlgoMaxIncreasingSubsequence())
//run(AlgoLongestCommonSubsequence())
run(AlgoCoinChange())
